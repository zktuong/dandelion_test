name: tests

on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - "master"

env:
  cache-version: 'cache-v1'

jobs:    
  changes:
    name: "Changed files"
    runs-on: ubuntu-latest
    outputs:
      changed_file: ${{ steps.files.outputs.added_modified }}
    steps:
      - id: files
        uses: jitterbit/get-changed-files@b17fbb00bdc0c0f63fcf166580804b4d2cdc2a42
        with:
          format: 'json'
  tests:
    needs:
      - changes
    timeout-minutes: 720
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      max-parallel: 6
      matrix:
        config:
          - { python-version: 3.7, os: macos-latest}
          - { python-version: 3.8, os: macos-latest}
          - { python-version: 3.9, os: macos-latest}
          - { python-version: "3.10", os: macos-latest}
          # disabled until it's fixed.
    runs-on: ${{ matrix.config.os }}
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      NOT_CRAN: true
      TZ: UTC
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Continue if relevant file changed
        run: |
          # Continue if we have a changed Singularity recipe
          if [[ ${{ needs.changes.outputs.changed_file }} =~ '.py|container|.def' ]]; then
            echo "keepgoing=true" >> $GITHUB_ENV
          fi
      - name: Setup checkout
        if: ${{ env.keepgoing == 'true' }}
        uses: actions/checkout@v2
      - name: Setup node
        if: ${{ env.keepgoing == 'true' }}
        uses: actions/setup-node@v2
      
      - name: Install macOS system dependencies
        if: ${{ env.keepgoing == 'true' }}
        run: |
          brew install cairo pkg-config autoconf automake libtool
  
      - name: Cache conda
        if: ${{ env.keepgoing == 'true' }}
        uses: actions/cache@v1
        env:
          # Increase this value to reset cache if etc/example-environment.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles('environment.yml') }}
  
      - name: Setup Miniconda
        if: ${{ env.keepgoing == 'true' }}
        uses: conda-incubator/setup-miniconda@v2.1.1
        with:
          auto-activate-base: true
          auto-update-conda : true
          activate-environment: dandelion
          channels: conda-forge, bioconda, anaconda, defaults
          channel-priority: true
          python-version: ${{ matrix.config.python-version }}
          environment-file: environment.yml
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!
     
      - name: Display Python version
        if: ${{ env.keepgoing == 'true' }}
        run: |
          python --version
          which python
          
      - name: Install Dandelion
        if: ${{ env.keepgoing == 'true' }}
        run: |
          python -m pip install .
                
      - name: Test with pytest
        if: ${{ env.keepgoing == 'true' }}
        run: |
          python -m pytest --cov=dandelion
